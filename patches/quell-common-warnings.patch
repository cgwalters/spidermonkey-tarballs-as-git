# HG changeset patch
# Parent 081449ca02037816c9cc4f3d8f9c6918bbff6d76
diff --git a/js/src/gc/Root.h b/js/src/gc/Root.h
--- a/js/src/gc/Root.h
+++ b/js/src/gc/Root.h
@@ -277,6 +277,7 @@ template <>
 struct RootSink<JSStableString *> {
     static void dispose(JSStableString *ptr) {
         JSStableString * volatile sink;
+        (void) sink;
         sink = ptr;
     }
 };
diff --git a/js/src/vm/ObjectImpl-inl.h b/js/src/vm/ObjectImpl-inl.h
--- a/js/src/vm/ObjectImpl-inl.h
+++ b/js/src/vm/ObjectImpl-inl.h
@@ -210,6 +210,7 @@ ValueCompartment(const js::Value &value)
     return static_cast<js::gc::Cell *>(value.toGCThing())->compartment();
 }
 
+#ifdef DEBUG
 static bool
 IsValueInCompartment(js::Value v, JSCompartment *comp)
 {
@@ -218,6 +219,7 @@ IsValueInCompartment(js::Value v, JSComp
     JSCompartment *vcomp = ValueCompartment(v);
     return vcomp == comp->rt->atomsCompartment || vcomp == comp;
 }
+#endif
 
 inline void
 js::ObjectImpl::setSlot(uint32_t slot, const js::Value &value)
